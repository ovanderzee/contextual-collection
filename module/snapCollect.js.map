{"version":3,"file":"snapCollect.js","sources":["../src/functions.js","../src/core.js","../node_modules/my-lib/module/myLib.js","../src/yielding.js","../src/index.js","../src/maintenance.js"],"sourcesContent":["const keying = {\n    /**\n     * Check value applicable as key\n     * @private\n     * @param {Any} value\n     * @return {Boolean} useablity\n     */\n    test: function (value) {\n        return value && value.toString\n    },\n\n    /**\n     * Compose a key\n     * @private\n     * @param {Any} value - to convert\n     * @return {String} useable key\n     */\n    make: function (value) {\n        return value.toString()\n    },\n}\n\n/**\n * Convert an array to a likewise initialised SnapCollect object\n * @private\n * @this {SnapCollect}\n * @param {Object[]} foreignArray - to convert\n * @return {Object} keyed object\n */\nconst arrayToSnapCollect = function (foreignArray) {\n    const foreignCollection = Object.create(Object.getPrototypeOf(this))\n    foreignCollection.add(...foreignArray)\n    return foreignCollection\n}\n\n/**\n * Get identifier from initialised SnapCollect object,\n * @private\n * @param {SnapCollect} collection - initialised SnapCollect object\n * @return {String} identifier\n */\nconst getIdentifier = function (collection) {\n    return Object.getPrototypeOf(collection).identifier\n}\n\n/**\n * Act on data satisfing all conditions,\n * using a JSON.stringify comparison.\n * @private\n * @param {Object} conditions - one or more conditions\n * @param {Boolean} isAction - act on true or act on false\n */\nconst conditionalDeleting = function (conditions, isAction) {\n    const conditionsEntries = Object.entries(conditions)\n    const values = Object.values(this)\n    const identifier = getIdentifier(this)\n    for (let value of values) {\n        let satisfing = true\n        conditionsEntries.forEach((condition) => {\n            satisfing =\n                satisfing &&\n                JSON.stringify(value[condition[0]]) ===\n                    JSON.stringify(condition[1])\n        })\n        if (satisfing === isAction) this.delete(value[identifier])\n    }\n}\n\nexport { keying, arrayToSnapCollect, conditionalDeleting }\n","import { keying } from './functions'\n\nconst methods = {\n    // core functions\n\n    /**\n     * Delete the data kept with a key, and the key itself.\n     * @param {String} key\n     */\n    delete: function (key) {\n        if (!keying.test(key)) return\n        delete this[keying.make(key)]\n    },\n    /**\n     * Get the data kept with a key.\n     * @param {String} key\n     * @return {Object} the data\n     */\n    get: function (key) {\n        if (!keying.test(key)) return\n        return this[keying.make(key)]\n    },\n    /**\n     * Examine the existance of a key.\n     * @param {String} key\n     * @return {Boolean}\n     */\n    has: function (key) {\n        if (!keying.test(key)) return\n        return Object.prototype.hasOwnProperty.call(this, keying.make(key))\n    },\n    /**\n     * Count the number of records kept.\n     * @return {Number}\n     */\n    get length() {\n        return Object.keys(this).length\n    },\n    /**\n     * Place (or replace) a record under a certain key.\n     * @param {String} key\n     * @param {Object} data\n     */\n    set: function (key, data) {\n        if (!keying.test(key)) return\n        this[keying.make(key)] = data\n    },\n}\n\nexport { methods }\n","const t=function(){let t=Boolean(arguments.length);return Array.from(arguments).forEach(e=>{t=t&&\"number\"==typeof e&&Number.isFinite(e)}),t},e=t=>Boolean(t&&\"string\"==typeof t&&1===t.length),n=t=>e(t)&&Boolean(t.match(/[0-9]/)),r=t=>e(t)&&t.toLowerCase()!==t.toUpperCase(),o=t=>e(t)&&t===t.toLowerCase()&&t!==t.toUpperCase(),i=t=>e(t)&&t===t.toUpperCase()&&t!==t.toLowerCase(),f=t=>t&&t.split&&!t.split(\"\").some(t=>!(r(t)||n(t))),c=(t,e)=>{const n=t.match(e);return n&&n[0]===t},u=function(t,e){return t<\"1e-\"+e&&t>\"-1e-\"+e?0:Number(Math.round(t+\"e\"+e)+\"e-\"+e)},l=function(t,e){const n=function(t,e){if(isNaN(t)||!Number.isInteger(e)||e<1)return\"NaN\";const n=Math.abs(t);if(0===n)return\"0\";if(n===1/0)return String(t);const r=Math.floor(Math.log(n)/Math.log(10)),o=t/Math.pow(10,r);return u(o,e-1)+\"e\"+r}(t,e);return Number(n)},a=t=>\"object\"==typeof t&&(t instanceof String||t instanceof Number||t instanceof BigInt||t instanceof Boolean||t instanceof Symbol),s=function(t){const e=\"string\"==typeof t||\"number\"==typeof t||\"boolean\"==typeof t||\"bigint\"==typeof t||\"symbol\"==typeof t;return a(t)||e},p=function(t){return t&&(t.getRootNode()instanceof Document||t.getRootNode()instanceof ShadowRoot)},g=()=>{console.log(\"Hello World!\")},h=function(t,e){const n=[...t,...e],r=new Set(n);return Array.from(r)},y=function(t,e){let n={};return t.forEach(t=>n[t]=1),e.filter(t=>{if(1===n[t])return delete n[t],t})},b=function(t){let e=[];return e.push.apply(e,document.querySelectorAll(t)),e},m=function(){let t=[...arguments].filter(t=>t>=0),e=[...arguments].filter(t=>t<=0);return t.length===arguments.length||e.length===arguments.length},N=function(t){return t.split(\",\").map(t=>t.trim().replace(/\\s+/g,\" \")).filter(t=>t.length)},w=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},S=t=>t.reduce((t,e)=>t+e,0),d=t=>S(t)/t.length||0,j=function(t){let e=\"object\"!=typeof t;return e=e||null===t||a(t),e},C=function(t){let e=t;if(j(t))return t;if(Array.isArray(t)){e=[];for(let n of t)e.push(C(n))}else if(t instanceof Date)e=new Date(t.getTime());else if(t instanceof RegExp)e=new RegExp(t.source,t.flags);else if(\"object\"==typeof t){e={};for(let[n,r]of Object.entries(t))e[n]=C(r)}return e},M=function(t){try{return String(t)}catch(e){try{return JSON.stringify(t)}catch(t){return\"\"}}},A=function(t){let e;try{return e=t.toString(),\"[object Object]\"===e&&(e=M(t)),e}catch(e){return M(t)}};export{h as arrayCombination,N as arrayFromCommaSeparatedList,b as arrayFromQuery,y as arrayIntersection,C as deepClone,M as forceStringify,g as greet,w as hasOwnProperty,f as isAlphaNumeric,p as isAttachedToDom,e as isChar,n as isDigit,m as isEqualSigns,c as isExactMatch,j as isFundamental,r as isLetter,o as isLower,s as isPrimitive,i as isUpper,t as isUsableNumber,d as mathAvg,S as mathSum,u as roundAtDecimals,l as roundAtDigits,A as stringify};\n//# sourceMappingURL=myLib.js.map\n","import { arrayToSnapCollect } from './functions'\nimport {\n    arrayIntersection,\n    arrayCombination,\n    isUsableNumber,\n    forceStringify,\n} from 'my-lib'\n\nconst yieldingMethods = {\n    // yielding arrays\n\n    /**\n     * Return all kept records in a two dimensional Array,\n     * using the native Object.entries.\n     * @return {Array} entries\n     */\n    entries: function () {\n        return Object.entries(this)\n    },\n    /**\n     * Return the keys of all kept records,\n     * using the native Object.keys.\n     * @return {String[]} keys\n     */\n    keys: function () {\n        return Object.keys(this)\n    },\n    /**\n     * Return the values of all kept records,\n     * using the native Object.values.\n     * @return {Object[]} values\n     */\n    values: function () {\n        return Object.values(this)\n    },\n\n    /**\n     * Return ascending sorted values of all kept records\n     * @param {Arguments} anonymus - one or more property names to sort on, most important property first\n     * @return {Object[]} sorted records\n     */\n    sort: function () {\n        const sorted = Object.values(this)\n        const lacksToString = function (value) {\n            try {\n                return !value.toString\n            } catch (e) {\n                return true\n            }\n        }\n        for (let i = arguments.length - 1; i > -1; i--) {\n            const prop = arguments[i]\n            sorted.sort(function (a, b) {\n                if (isUsableNumber(a[prop], b[prop])) {\n                    return a[prop] - b[prop]\n                }\n                if (lacksToString(a[prop]) && lacksToString(b[prop])) {\n                    const valueA = forceStringify(a[prop])\n                    const valueB = forceStringify(a[prop])\n                    return valueA.localeCompare(valueB)\n                }\n                if (lacksToString(a[prop])) {\n                    return sorted.length\n                }\n                if (lacksToString(b[prop])) {\n                    return 0 - sorted.length\n                }\n                // here, everything has a toString method\n                const valueA = a[prop].toString()\n                const valueB = b[prop].toString()\n                return valueA.localeCompare(valueB)\n            })\n        }\n        return sorted\n    },\n\n    /**\n     * Find records satisfing all conditions,\n     * using a JSON.stringify comparison.\n     * @param {Object} conditions - one or more conditions\n     * @return {Object[]} subset of records\n     */\n    where: function (conditions) {\n        let subset = Object.values(this)\n        const compareKeys = Object.keys(conditions)\n        compareKeys.forEach((key) => {\n            subset = subset.filter(\n                (subsetItem) =>\n                    JSON.stringify(subsetItem[key]) ===\n                    JSON.stringify(conditions[key]),\n            )\n        })\n        return subset\n    },\n\n    /**\n     * Find all records from both arrays by identifier,\n     * with deduplication.\n     * @param {Object[] || snapCollect} foreignItem\n     * @return {Object[]} common values, deduplicated\n     */\n    combination: function (foreignItem) {\n        if (Array.isArray(foreignItem)) {\n            foreignItem = arrayToSnapCollect.call(this, foreignItem)\n        }\n        const commonKeys = arrayCombination(this.keys(), foreignItem.keys())\n        const commons = commonKeys.map(\n            (key) => this.get(key) || foreignItem.get(key),\n        )\n        return commons\n    },\n\n    /**\n     * Find records appearing in both own collection and in foreign array,\n     * by comparing their identifier,\n     * with deduplication.\n     * @param {Object[] || snapCollect} foreignItem\n     * @return {Object[]} mutual values, deduplicated\n     */\n    intersection: function (foreignItem) {\n        if (Array.isArray(foreignItem)) {\n            foreignItem = arrayToSnapCollect.call(this, foreignItem)\n        }\n        const mutualKeys = arrayIntersection(this.keys(), foreignItem.keys())\n        const mutuals = mutualKeys.map((key) => this.get(key))\n        return mutuals\n    },\n}\n\nexport { yieldingMethods }\n","import { methods } from './core'\nimport { getMainMethods } from './maintenance'\nimport { yieldingMethods } from './yielding'\n\n/**\n * Contruct a SnapCollect object.\n * The identifier is passed form the main function.\n * @private\n * @param {String} identifier\n * @return {Object} the prototype\n */\nconst init = function SnapCollect(identifier) {\n    // determine key to store the held objects\n    const accept = Boolean(identifier)\n    const errMsg = 'snapCollect: identifier must evaluate to true'\n    if (!accept) throw errMsg\n\n    // set characteristic SnapCollect properties\n    methods.identifier = identifier\n    methods.name = 'SnapCollect'\n\n    // append methods object\n    Object.assign(methods, getMainMethods(identifier), yieldingMethods)\n\n    return methods\n}\n\n/**\n * Create a new empty SnapCollect object.\n * The identifier is the unique key used to identify the objects.\n * @param {String} identifier\n * @return {SnapCollect}\n */\nconst snapCollect = function (identifier) {\n    const methods = init(identifier)\n    return Object.create(methods)\n}\n\nexport default snapCollect\n","import { conditionalDeleting, arrayToSnapCollect } from './functions'\n\nconst getMainMethods = function (identifier) {\n    const methods = {\n        // maintenance functions\n\n        /**\n         * Place (or replace) one or more record,\n         * get the key for the record from the field specified by the identifier.\n         * @param {Arguments} anonymus - one or more records\n         * @return {Object[]} all current data\n         */\n        add: function () {\n            const dataList = Array.from(arguments)\n            dataList.forEach((data) => this.set(data[identifier], data))\n            return Object.values(this)\n        },\n        /**\n         * Delete all data and return to initial state.\n         */\n        clear: function () {\n            const keys = Object.keys(this)\n            for (let key of keys) {\n                this.delete(key)\n            }\n        },\n        /**\n         * Confine collection to intersection with array.\n         * @param {Object[] || SnapCollect} foreignItem - other similar data\n         * @return {Object[]} all current data\n         */\n        cross: function (foreignItem) {\n            if (Array.isArray(foreignItem)) {\n                foreignItem = arrayToSnapCollect.call(this, foreignItem)\n            }\n            const foreignKeys = foreignItem.keys()\n            const keys = Object.keys(this)\n            for (let key of keys) {\n                if (!foreignKeys.includes(key)) {\n                    this.delete(key)\n                }\n            }\n            return Object.values(this)\n        },\n        /**\n         * Delete data satisfing all conditions,\n         * using a JSON.stringify comparison.\n         * @param {Object} conditions - one or more conditions\n         * @return {Object[]} all current data\n         */\n        drop: function (conditions) {\n            conditionalDeleting.call(this, conditions, true)\n            return Object.values(this)\n        },\n        /**\n         * Confine collection to the data satisfing all conditions,\n         * using a JSON.stringify comparison.\n         * @param {Object} conditions - one or more conditions\n         * @return {Object[]} all current data\n         */\n        hold: function (conditions) {\n            conditionalDeleting.call(this, conditions, false)\n            return Object.values(this)\n        },\n        /**\n         * Place an unkown record or remove a known record.\n         * @param {Object} data - one unit\n         * @return {Object[]} all current data\n         */\n        toggle: function (data) {\n            const key = data[identifier]\n            if (this.has(key)) {\n                this.delete(key)\n            } else {\n                this.set(key, data)\n            }\n            return Object.values(this)\n        },\n    }\n\n    return methods\n}\n\nexport { getMainMethods }\n"],"names":["keying","value","toString","arrayToSnapCollect","foreignArray","foreignCollection","Object","create","getPrototypeOf","this","add","conditionalDeleting","conditions","isAction","conditionsEntries","entries","values","identifier","collection","satisfing","forEach","condition","JSON","stringify","delete","methods","key","get","has","prototype","hasOwnProperty","call","length","keys","set","data","t","Boolean","arguments","Array","from","e","Number","isFinite","M","String","yieldingMethods","sort","sorted","lacksToString","i","prop","a","b","isUsableNumber","valueA","forceStringify","valueB","localeCompare","where","subset","filter","subsetItem","combination","foreignItem","isArray","n","r","Set","arrayCombination","map","intersection","arrayIntersection","init","name","assign","dataList","clear","cross","foreignKeys","includes","drop","hold","toggle","getMainMethods"],"mappings":"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"}